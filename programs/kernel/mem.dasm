dat 0

;     in A - number of pages
;     in B - owner
;    out C - base address, or 0 if fail
; clobbers - I, X, Y, Z
;
; TIME: around 0.15 ms (150 cycles) per call
:alloc_pages
  set push, a
  set push, b
  jsr find_page_entry
  ife b, 0
    set pc, _ap_fail
  set a, b
  set b, pop
  jsr claim_pages
  set a, pop
  set pc, pop
:_ap_fail
  set c, 0
  set b, pop
  set a, pop
  set pc, pop

;     in A - address of first page
;     in B - owner
;    out C - number of pages freed
; clobbers - I, Z
:free_addr
  set i, a
  shr i, [lg_page_size]
  add i, [num_pages]
  sub i, 1
  set c, 0
  set z, 0x100
:_fa_climb
  ifn [page_table_addr+i], 0
    set pc, _fa_found
  shl c, 1
  ife c, 0
    add c, 1
  sub i, 1
  shr i, 1
  shl z, 1
  set pc, _fa_climb
:_fa_found
  ifn [page_table_addr+i], b
    set pc, _fa_fail
:_fa_free_page
  set [page_table_addr+i], z
  ife i, 0
    set pc, pop
  sub i, 1
  xor i, 1
  add i, 1
  ifn [page_table_addr+i], z
    set pc, _fa_zip_up
  set [page_table_addr+i], 0
  sub i, 1
  xor i, 1
  add i, 1
  set [page_table_addr+i], 0
  sub i, 1
  shr i, 1
  shl z, 1
  set pc, _fa_free_page
:_fa_zip_up
  sub i, 1
  shr i, 1
  ifl z, [page_table_addr+i]
    set pc, pop
  set [page_table_addr+i], z
  ife i, 0
    set pc, pop
  set pc, _fa_zip_up
:_fa_fail
  set c, 0
  set pc, pop

;     in A - page entry address
;     in B - owner
;     in J - depth of page entry
;    out C - address of claimed pages
; clobbers - I, X, Y
:claim_pages
  set [a], b
  set i, a
  sub i, page_table_addr
  set c, i
  set x, [lg_num_pages]
  sub x, j ; (i - 2^l + 1) << (2-l)
  set y, 1
  shl y, j
  sub c, y
  add c, 1
  shl c, x
  shl c, [lg_page_size]
:_cp_loop
  ife i, 0
    set pc, pop
  set x, [page_table_addr+i]
  sub i, 1
  xor i, 1
  add i, 1
  set y, [page_table_addr+i]
  ifg y, x
    set x, y
  sub i, 1
  shr i, 1
  set [page_table_addr+i], x
  sub j, 1
  set pc, _cp_loop

;     in A - number of pages wanted
;    out B - address of page table entry
;    out J - depth of page entry
; clobbers - I, Z
:find_page_entry
  jsr round_up_2
  set i, 0
  set j, 0xFFFF
  set z, [num_pages]
  shl z, 1
  set b, [page_table_addr+i]
  shr b, 8
:_fpe_loop
  shr z, 1
  add j, 1
  ifl b, a
    set pc, _fpe_fail
  ife z, a
    set pc, _fpe_found
  ife z, b
    jsr split_page
  shl i, 1
  add i, 1
  set b, [page_table_addr+i]
  shr b, 8
  ifl b, a
    add pc, 2
  set pc, _fpe_loop
  add i, 1
  set b, [page_table_addr+i]
  shr b, 8
  set pc, _fpe_loop
:_fpe_fail
  set b, 0
  set pc, pop
:_fpe_found
  set b, i
  add b, page_table_addr
  set pc, pop

; in I - index of page entry to split
; in Z - size of page to split
:split_page
  set push, i
  shl z, 7
  shl i, 1
  add i, 1
  set [page_table_addr+i], z
  add i, 1
  set [page_table_addr+i], z
  set i, pop
  shr z, 7
  set pc, pop

:kernel_pages dat 0x0020
:page_size    dat 0x0100
:num_pages    dat 0x0100
:lg_page_size dat 0x0008
:lg_num_pages dat 0x0008

:page_table_addr ; 512 words
  dat 0x8001, 0x4001, 0x8000, 0x0001, 0x4000
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
